/* change status of a user-created place 
 *
 * INPUT  : accountID, flag
 * 		flag = 1 -> activate the URLs
 *		flag = 0 -> deactivate the URLs
 *          if a specific URL is provided, change only that one.
 *
 * OUTPUT : return value - 0 if successful
 *                        20001 if account ID not found
 *                        20004 change too frequent (server hasn't caught up)
 */
CREATE PROC updateUserPlace
(
  @accountID userIdentifier,
  @activate bit,
  @URL UrlType = NULL
)
AS
BEGIN
  DECLARE @lastError            int
  DECLARE @type			integer
  DECLARE @title		longName
  DECLARE @roomCapacity		integer
  DECLARE @protected    	bit
  DECLARE @category       	categoryIdentifier
  DECLARE @domainFlag     	bit
  DECLARE @rows			int
  DECLARE @aid			userIdentifier
  
  IF EXISTS ( SELECT * FROM persistentPlacesChange WHERE URL in ( SELECT URL FROM userPlaces WHERE accountID = @accountID ))
  BEGIN
    RETURN 20004
  END

  /*
   * Process a single URL
   */
  IF @URL IS NOT NULL
  BEGIN
    SELECT @type = type, @title = title, @roomCapacity = roomCapacity, @protected = roomProtected, @category = category, @domainFlag = domainFlag
      FROM userPlaces
      WHERE URL = @URL

    SELECT @rows = @@rowcount
    SELECT @lastError = @@error
    IF @lastError > 0 
    BEGIN
      RETURN @lastError
    END

    IF @rows = 0
    BEGIN
      RETURN 20001
    END
      
    IF ( @activate = 1 )
    BEGIN
      /*
       * add to persistent places
       */
      IF NOT EXISTS ( SELECT * FROM persistentPlaces WHERE URL = @URL )
      BEGIN
        EXEC addPersistentPlace @URL, @type, @title, @roomCapacity, @protected, 0, 0, 'row'
      END
          
      /*
       * add to place categories
       */
      IF NOT EXISTS ( SELECT * FROM placeCategories WHERE URL = @URL )
      BEGIN
        EXEC  addPlaceToCategory @category, @URL, @domainFlag
      END
    END
    /*
     * deactivate
     */
    ELSE BEGIN
      IF EXISTS ( SELECT * FROM persistentPlaces WHERE URL = @URL )
      BEGIN
        EXEC delPersistentPlace @URL
      END

      IF EXISTS ( SELECT * FROM placeCategories WHERE URL = @URL )
      BEGIN
        EXEC delPlaceFromCategory @category, @URL
      END
    END
  END

  /*
   * Process all URLs for the account
   */
  ELSE BEGIN
    SELECT @rows = COUNT(accountID)
       FROM userPlaces
       WHERE accountID = @accountID

    SELECT @lastError = @@error
    IF @lastError > 0 
    BEGIN
      RETURN @lastError
    END

    IF @rows = 0
    BEGIN
      RETURN 20001
    END

    DECLARE placesCursor CURSOR
      FOR SELECT URL,type,title,roomCapacity,roomProtected,category,domainFlag
            FROM userPlaces
            WHERE accountID = @accountID

    OPEN placesCursor

    FETCH placesCursor INTO @URL, @type, @title, @roomCapacity, @protected, @category, @domainFlag
    WHILE (( @@sqlstatus = 0 ) AND ( @rows > 0 ))
    BEGIN

      IF ( @activate = 1 )
      BEGIN
        /*
         * add to persistent places
         */
        IF NOT EXISTS ( SELECT * FROM persistentPlaces WHERE URL = @URL )
        BEGIN
          EXEC addPersistentPlace @URL, @type, @title, @roomCapacity, @protected, 0, 0, 'row'
        END
          
        /*
         * add to place categories
         */
        IF NOT EXISTS ( SELECT * FROM placeCategories WHERE URL = @URL )
        BEGIN
          EXEC  addPlaceToCategory @category, @URL, @domainFlag
        END
      END
      /*
       * deactivate
       */
      ELSE BEGIN
        IF EXISTS ( SELECT * FROM persistentPlaces WHERE URL = @URL )
        BEGIN
          EXEC delPersistentPlace @URL
        END

        IF EXISTS ( SELECT * FROM placeCategories WHERE URL = @URL )
        BEGIN
          EXEC delPlaceFromCategory @category, @URL
        END
      END

      SELECT @rows = @rows - 1
      FETCH placesCursor INTO @URL, @type, @title, @roomCapacity, @protected, @category, @domainFlag

    END
    CLOSE placesCursor
  END
END
GO
GRANT EXECUTE ON updateUserPlace TO vpusr
GO
