/*
 * Add a user defined place
 *
 * output: return value - 0 if successfull,
 *                        20001 if URL is already in use (another account)
 *                        20002 if URL is already in persistentPlaces
 *                        20003 if URL is already in placeCategories
 *                        20004 change too frequent (server hasn't caught up)
 *                        20005 if URL is already in use (THIS account)
 *                        20006 if URL is blocked (shadow places)
 */
IF EXISTS(SELECT name FROM sysobjects WHERE name='addUserPlace' AND type='P')
 DROP PROC addUserPlace
GO
CREATE PROC addUserPlace
(
  @accountID            userIdentifier,
  @URL                  UrlType,
  @type			integer,
  @title		longName,
  @roomCapacity		integer,
  @protected		bit,
  @parentCategory       categoryIdentifier,
  @domainFlag           bit = 1
)
AS
BEGIN
  DECLARE @lastError int
  DECLARE @existingURL UrlType
  DECLARE @canonicURL UrlType
  DECLARE @aid userIdentifier

  SELECT @canonicURL = lower(@URL)

  BEGIN TRAN
    /*
     * try to find an existing
     * persistent place using
     * the same URL
     */
    SELECT @existingURL = URL, @aid = accountID
      FROM userPlaces
      WHERE lower(URL) = @canonicURL 
   
    SELECT @lastError = @@error
    IF @lastError != 0
    BEGIN
      ROLLBACK TRAN
      RETURN @lastError
    END
  
    IF @existingURL IS NOT NULL
    BEGIN
      IF @aid = @accountID
      BEGIN
        ROLLBACK TRAN
        RETURN 20005
      END
      ELSE BEGIN
        /*
         * URL is in use by another account, but if that account is Closed
         * or Overdue allow this operation to proceed by deleting the
         * old entry.
         */
        DECLARE @rc int
        EXEC @rc = vpusers..checkAccountStatus @aid
        SELECT @lastError = @@error
        IF @lastError != 0
        BEGIN
          ROLLBACK TRAN
          RETURN @lastError
        END
        IF @rc = 3 OR @rc = 5
        BEGIN
          DELETE userPlaces
          WHERE URL = @canonicURL AND accountID = @aid

          SELECT @lastError = @@error
          IF @lastError != 0
          BEGIN
            ROLLBACK TRAN
            RETURN @lastError
          END
        END
        /*
         * sorry, can't have it
         */
        ELSE
        BEGIN
          ROLLBACK TRAN
          RETURN 20001
        END
      END
    END

    /*
     * check if the URL is categorized already (could be non-persistent
     * yet categorized).
     */
    SELECT @existingURL = NULL	-- clear previous value
    SELECT @existingURL = URL
      FROM placeCategories
      WHERE lower(URL) = @canonicURL 
   
    SELECT @lastError = @@error
    IF @lastError != 0
    BEGIN
      ROLLBACK TRAN
      RETURN @lastError
    END
  
    IF @existingURL IS NOT NULL
    BEGIN
      ROLLBACK TRAN
      RETURN 20003
    END

    /* 
     * also check persistent places table for a dup.
     * this would be an uncategorizd yet persistent place.
     */
    SELECT @existingURL = NULL	-- clear previous value
    SELECT @existingURL = URL
      FROM persistentPlaces
      WHERE lower(URL) = @canonicURL 
   
    SELECT @lastError = @@error
    IF @lastError != 0
    BEGIN
      ROLLBACK TRAN
      RETURN @lastError
    END
  
    IF @existingURL IS NOT NULL
    BEGIN
      ROLLBACK TRAN
      RETURN 20002
    END

    /*
     * check if the URL is blocked
     */
    SELECT @existingURL = NULL	-- clear previous value
    SELECT @existingURL = URL
      FROM shadowPlaces
      WHERE lower(URL) = @canonicURL 
   
    SELECT @lastError = @@error
    IF @lastError != 0
    BEGIN
      ROLLBACK TRAN
      RETURN @lastError
    END
  
    IF @existingURL IS NOT NULL
    BEGIN
      ROLLBACK TRAN
      RETURN 20006
    END

    /* 
     * finally, check persistent places change table for a dup.
     * if there is, we're changing stuff too fast for the VPS to
     * keep up. slow down. take a break.
     */
    SELECT @existingURL = NULL	-- clear previous value
    SELECT @existingURL = URL
      FROM persistentPlacesChange
      WHERE lower(URL) = @canonicURL 
   
    SELECT @lastError = @@error
    IF @lastError != 0
    BEGIN
      ROLLBACK TRAN
      RETURN @lastError
    END
  
    IF @existingURL IS NOT NULL
    BEGIN
      ROLLBACK TRAN
      RETURN 20004
    END
  
    /*
     * insert a userPlace entry for this account
     */
    INSERT userPlaces
      ( accountID, URL, type, title, roomCapacity, 
        roomProtected, category, domainFlag, tournament )
      VALUES 
      ( @accountID, @URL, @type, @title, @roomCapacity, 
        @protected, @parentCategory, @domainFlag, 0 )
   
    SELECT @lastError = @@error
    IF @lastError != 0
    BEGIN
      ROLLBACK TRAN
      RETURN @lastError
    END

    /*
     * add to persistent places
     */
    EXEC addPersistentPlace @URL, @type, @title, @roomCapacity, @protected, 0, 0, 'row'
        
    SELECT @lastError = @@error
    IF @lastError != 0
    BEGIN
      ROLLBACK TRAN
      RETURN @lastError
    END

    /*
     * add to place categories
     */
    EXEC  addPlaceToCategory @parentCategory, @URL, @domainFlag
        
    SELECT @lastError = @@error
    IF @lastError != 0
    BEGIN
      ROLLBACK TRAN
      RETURN @lastError
    END

  COMMIT TRAN

END
GO
GRANT EXECUTE ON addUserPlace TO vpusr
GO
