/* display all registered users with email matching a given wildcard expression */
/* input:  wildcard expression
   output: list of all matching emails, with nicknames and userID) 
*/
CREATE PROC showUsersByMatchingEmail ( @@wildcard longName )
AS
BEGIN
  DECLARE @@convertedWildcard longName
  DECLARE @@pos tinyint
  DECLARE @@length tinyint
  DECLARE @@currentChar varchar(1)
  /* first, convert wildcard to sybase wildcard syntax */
  
  SELECT @@convertedWildcard = ltrim("")
  SELECT @@pos = 1
  SELECT @@length = char_length( @@wildcard )
  
  WHILE @@pos <= @@length
  BEGIN
    SELECT @@currentChar = substring( @@wildcard, @@pos, 1 )
    SELECT @@pos = @@pos + 1
  
    /* change "%" to "#%" */
    IF ( @@currentChar = "%" )
    BEGIN
      SELECT @@convertedWildcard = @@convertedWildcard + "#%"
      CONTINUE
    END
  
    /* change "_" to "#_" */
    IF ( @@currentChar = "_" )
    BEGIN
      SELECT @@convertedWildcard = @@convertedWildcard + "#_"
      CONTINUE
    END
  
    /* change "*" to "%" */
    IF ( @@currentChar = "*" )
    BEGIN
      SELECT @@convertedWildcard = @@convertedWildcard + "%"
      CONTINUE
    END
  
    /* change "?" to "_" */
    IF ( @@currentChar = "?" )
    BEGIN
      SELECT @@convertedWildcard = @@convertedWildcard + "_"
      CONTINUE
    END
  
    /* any other character is just appnded as is */
    SELECT @@convertedWildcard = @@convertedWildcard + @@currentChar
  END
  
  /* now find the matches */
  SELECT nickName, email, users.userID
    FROM users, registration
    WHERE ( users.userID = registration.userID ) AND
          ( registrationMode = 2 ) AND
          ( email LIKE @@convertedWildcard ESCAPE "#" )

END
GO
