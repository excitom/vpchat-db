/*
 * Add an access list entry for a notify list and game ladder
 *
 * Input: List ID, userID, privileges
 *
 * Privileges that may be granted on a per ladder basis:
 * 0x01 = send alerts
 * 0x02 = send ladder email
 * 0x04 = schedule tournaments
 * 0x08 = update ladder notices
 * 0x10 = update ladder/tournament results
 *
 * Output: 0 = success
 *         1 = success, existing entry updated
 *         20000 = list not found
 *         20001 = deleted list
 *         20002 = locked list
 *         20004 = user not found
 *         20005 = account closed/suspended/overdue
 */
IF EXISTS
 (SELECT name FROM sysobjects WHERE name = 'addLadderPriv' AND type = 'P') 
 DROP PROC addLadderPriv
GO  
CREATE PROC addLadderPriv ( 
	@notifyID 	userIdentifier,
	@userID		userIdentifier,
	@accessPriv	tinyint
)
AS
BEGIN
  DECLARE @lastError	int
  DECLARE @rc		int
  DECLARE @locked	bit
  DECLARE @deleted	bit
  DECLARE @accountID	userIdentifier
  DECLARE @accountStatus	tinyint

  BEGIN TRAN
    IF EXISTS (SELECT * FROM notifyLists WHERE notifyID = @notifyID)
    BEGIN
      SELECT @locked = locked, @deleted = deleted
      FROM notifyLists
      WHERE notifyID = @notifyID

      SELECT @lastError = @@error
      IF @lastError != 0
      BEGIN
        ROLLBACK TRAN
        RETURN @lastError
      END

      IF @locked = 1
      BEGIN
        ROLLBACK TRAN
        RETURN 20002
      END

      IF @deleted = 1
      BEGIN
        ROLLBACK TRAN
        RETURN 20001
      END

      SELECT @accountID = accountID
        FROM vpusers..registration
        WHERE userID = @userID

      IF @accountID IS NULL OR @accountID = 0
      BEGIN
        ROLLBACK TRAN
        RETURN 20004
      END

      SELECT @accountStatus = accountStatus
        FROM vpusers..userAccounts
        WHERE accountID = @accountID

      SELECT @lastError = @@error
      IF @lastError != 0
      BEGIN
        ROLLBACK TRAN
        RETURN @lastError
      END

      IF @accountStatus != 0
      BEGIN
        ROLLBACK TRAN
        RETURN 20005
      END

      IF EXISTS (SELECT * FROM notifyAccessList
                   WHERE userID = @userID
                   AND   notifyID  = @notifyID)
      BEGIN
        UPDATE notifyAccessList
          SET accessPriv = @accessPriv
          WHERE notifyID = @notifyID
          AND userID = @userID
      END
      ELSE BEGIN
        INSERT notifyAccessList (notifyID, userID, accountID, maxMsgs, msgInterval, msgCount, locked, accessPriv)
          VALUES (@notifyID, @userID, @accountID, 2, 1440, 0, 0, @accessPriv)
      END

      SELECT @lastError = @@error
      IF @lastError != 0
      BEGIN
        ROLLBACK TRAN
        RETURN @lastError
      END
    END
    ELSE BEGIN
      ROLLBACK TRAN
      RETURN 20000
    END

  COMMIT TRAN
END
GO
